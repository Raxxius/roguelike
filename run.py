import random


def dungeon_size():
    """
    This function decides the size of the map and runs all
    the individual dungeon generation functions
    """
    print("defining dungeon size...\n")
    size = input("how large would you like the dungeon to be? S, M or L?\n")
    sizef = size[0]
    if "s" in sizef.lower():
        print("Creating a small dungeon")
        dungeon_map = init_dungeon(20, 40)
        room_number = init_rooms(random.randint(8, 12))
        position_rooms(room_number, dungeon_map, 20, 40)
        print(dungeon_map)
    elif "m" in sizef.lower():
        print("Creating a medium dungeon")
        init_dungeon(50, 50)
        init_rooms(random.randint(20, 30))
    elif "l" in sizef.lower():
        print("Creating a large dungeon")
        init_dungeon(100, 100)
        init_rooms(random.randint(50, 70))
    else:
        print("that's not a valid size you muppet")


def init_dungeon(d_width, d_height):
    """
    This function sets every square in the dungeon to wall
    dungeon size generated by the dungeon size function
    """
    print("Generating dungeon map...")
    dungeon_map = {}
    x = 0
    for xcoord in range(d_width):
        for ycoord in range(d_height):
            dungeon_map[x] = f"Tile {x}", xcoord, ycoord, wall
            x += 1
    print("map generated!")
    return dungeon_map


def init_rooms(room_number):
    """
    This function adds rooms to the dungeon
    the number of rooms added is dependant upon the dungeon_size() function
    rooms have a random size
    dungeon_width is called to allow for expansion to change room size based
    on dungeon size
    """

    rooms = {}
    for room in range(room_number):
        room_height = random.randint(4, 6)
        room_width = random.randint(4, 6)
        rooms[room] = f"room {room}", room_height, room_width, room
    return rooms


def position_rooms(rooms, dungeon_map, dungeon_width, dungeon_height):
    """
    This function puts the rooms generated in the init_rooms function
    into the dungeon, rooms are added by changing the True value in the
    dungeon_map dict to False.
    """
    print(rooms)
    # Generating random starting points for the rooms
    for room in rooms:
        xcoord = random.randint(0, dungeon_width)
        ycoord = random.randint(0, dungeon_height)

        dungeon_map[xcoord, ycoord] = False
        print(xcoord, ycoord)
    print(rooms[room])


def main():
    dungeon_size()


main()
